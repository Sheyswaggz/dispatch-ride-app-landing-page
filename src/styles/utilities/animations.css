/**
 * Animation Utilities
 * 
 * Reusable animation utility classes and keyframes for scroll-triggered animations.
 * Respects user preferences for reduced motion and provides smooth, performant animations.
 * 
 * Usage:
 * - Add animation class to element (.fade-in, .slide-up, etc.)
 * - Add .visible class via JavaScript when element enters viewport
 * - Animation will trigger automatically with proper timing
 */

/* ============================================
   CSS CUSTOM PROPERTIES
   ============================================ */

:root {
  /* Animation timing */
  --animation-duration-fast: 300ms;
  --animation-duration-normal: 500ms;
  --animation-duration-slow: 700ms;
  
  /* Animation easing */
  --animation-ease-in: cubic-bezier(0.4, 0, 1, 1);
  --animation-ease-out: cubic-bezier(0, 0, 0.2, 1);
  --animation-ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
  --animation-ease-smooth: cubic-bezier(0.25, 0.1, 0.25, 1);
  
  /* Animation delays for staggered effects */
  --animation-delay-1: 100ms;
  --animation-delay-2: 200ms;
  --animation-delay-3: 300ms;
  --animation-delay-4: 400ms;
  
  /* Animation distances */
  --animation-distance-sm: 10px;
  --animation-distance-md: 20px;
  --animation-distance-lg: 30px;
}

/* ============================================
   KEYFRAME DEFINITIONS
   ============================================ */

/* Fade In Animation */
@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Slide Up Animation */
@keyframes slide-up {
  from {
    opacity: 0;
    transform: translateY(var(--animation-distance-md));
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Slide Down Animation */
@keyframes slide-down {
  from {
    opacity: 0;
    transform: translateY(calc(-1 * var(--animation-distance-md)));
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Slide Left Animation */
@keyframes slide-left {
  from {
    opacity: 0;
    transform: translateX(var(--animation-distance-md));
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Slide Right Animation */
@keyframes slide-right {
  from {
    opacity: 0;
    transform: translateX(calc(-1 * var(--animation-distance-md)));
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Scale In Animation */
@keyframes scale-in {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Scale Up Animation */
@keyframes scale-up {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Zoom In Animation */
@keyframes zoom-in {
  from {
    opacity: 0;
    transform: scale(0.5);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Rotate In Animation */
@keyframes rotate-in {
  from {
    opacity: 0;
    transform: rotate(-10deg) scale(0.9);
  }
  to {
    opacity: 1;
    transform: rotate(0) scale(1);
  }
}

/* Blur In Animation */
@keyframes blur-in {
  from {
    opacity: 0;
    filter: blur(10px);
  }
  to {
    opacity: 1;
    filter: blur(0);
  }
}

/* ============================================
   BASE ANIMATION CLASSES
   ============================================ */

/* Initial hidden state for all animated elements */
.fade-in,
.slide-up,
.slide-down,
.slide-left,
.slide-right,
.scale-in,
.scale-up,
.zoom-in,
.rotate-in,
.blur-in {
  opacity: 0;
  animation-duration: var(--animation-duration-normal);
  animation-timing-function: var(--animation-ease-out);
  animation-fill-mode: both;
}

/* ============================================
   VISIBLE STATE TRIGGERS
   ============================================ */

/* Fade In */
.fade-in.visible {
  animation-name: fade-in;
}

/* Slide Up */
.slide-up.visible {
  animation-name: slide-up;
}

/* Slide Down */
.slide-down.visible {
  animation-name: slide-down;
}

/* Slide Left */
.slide-left.visible {
  animation-name: slide-left;
}

/* Slide Right */
.slide-right.visible {
  animation-name: slide-right;
}

/* Scale In */
.scale-in.visible {
  animation-name: scale-in;
}

/* Scale Up */
.scale-up.visible {
  animation-name: scale-up;
}

/* Zoom In */
.zoom-in.visible {
  animation-name: zoom-in;
}

/* Rotate In */
.rotate-in.visible {
  animation-name: rotate-in;
}

/* Blur In */
.blur-in.visible {
  animation-name: blur-in;
}

/* ============================================
   ANIMATION DURATION MODIFIERS
   ============================================ */

.animation-fast {
  animation-duration: var(--animation-duration-fast) !important;
}

.animation-normal {
  animation-duration: var(--animation-duration-normal) !important;
}

.animation-slow {
  animation-duration: var(--animation-duration-slow) !important;
}

/* ============================================
   ANIMATION DELAY MODIFIERS
   ============================================ */

.animation-delay-1 {
  animation-delay: var(--animation-delay-1);
}

.animation-delay-2 {
  animation-delay: var(--animation-delay-2);
}

.animation-delay-3 {
  animation-delay: var(--animation-delay-3);
}

.animation-delay-4 {
  animation-delay: var(--animation-delay-4);
}

/* ============================================
   STAGGERED ANIMATION SUPPORT
   ============================================ */

/* Apply staggered delays to child elements */
.stagger-children > *:nth-child(1) {
  animation-delay: calc(var(--animation-delay-1) * 1);
}

.stagger-children > *:nth-child(2) {
  animation-delay: calc(var(--animation-delay-1) * 2);
}

.stagger-children > *:nth-child(3) {
  animation-delay: calc(var(--animation-delay-1) * 3);
}

.stagger-children > *:nth-child(4) {
  animation-delay: calc(var(--animation-delay-1) * 4);
}

.stagger-children > *:nth-child(5) {
  animation-delay: calc(var(--animation-delay-1) * 5);
}

.stagger-children > *:nth-child(6) {
  animation-delay: calc(var(--animation-delay-1) * 6);
}

/* ============================================
   REDUCED MOTION SUPPORT
   ============================================ */

/**
 * Respect user's motion preferences
 * Disable all animations for users who prefer reduced motion
 */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
  
  /* Immediately show content without animation */
  .fade-in,
  .slide-up,
  .slide-down,
  .slide-left,
  .slide-right,
  .scale-in,
  .scale-up,
  .zoom-in,
  .rotate-in,
  .blur-in {
    opacity: 1;
    transform: none;
    filter: none;
  }
  
  /* Remove all animation delays */
  .animation-delay-1,
  .animation-delay-2,
  .animation-delay-3,
  .animation-delay-4,
  .stagger-children > * {
    animation-delay: 0ms !important;
  }
}

/* ============================================
   PERFORMANCE OPTIMIZATIONS
   ============================================ */

/**
 * Use will-change to hint browser about upcoming animations
 * Only apply to elements that will animate
 */
.fade-in:not(.visible),
.slide-up:not(.visible),
.slide-down:not(.visible),
.slide-left:not(.visible),
.slide-right:not(.visible),
.scale-in:not(.visible),
.scale-up:not(.visible),
.zoom-in:not(.visible),
.rotate-in:not(.visible),
.blur-in:not(.visible) {
  will-change: opacity, transform;
}

/* Remove will-change after animation completes */
.fade-in.visible,
.slide-up.visible,
.slide-down.visible,
.slide-left.visible,
.slide-right.visible,
.scale-in.visible,
.scale-up.visible,
.zoom-in.visible,
.rotate-in.visible,
.blur-in.visible {
  will-change: auto;
}

/* ============================================
   UTILITY CLASSES
   ============================================ */

/* Force hardware acceleration for smoother animations */
.animate-gpu {
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000px;
}

/* Pause animation */
.animation-paused {
  animation-play-state: paused !important;
}

/* Infinite animation loop */
.animation-infinite {
  animation-iteration-count: infinite;
}

/* Alternate animation direction */
.animation-alternate {
  animation-direction: alternate;
}

/* Reverse animation direction */
.animation-reverse {
  animation-direction: reverse;
}

/* ============================================
   PRINT STYLES
   ============================================ */

/**
 * Disable animations in print media
 * Show all content immediately
 */
@media print {
  .fade-in,
  .slide-up,
  .slide-down,
  .slide-left,
  .slide-right,
  .scale-in,
  .scale-up,
  .zoom-in,
  .rotate-in,
  .blur-in {
    opacity: 1 !important;
    transform: none !important;
    filter: none !important;
    animation: none !important;
  }
}